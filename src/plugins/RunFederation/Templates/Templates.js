//jshint ignore: start
/* Generated file based on ejs templates */
define([], function() {
    return {
    "dockerFileTemplate.ejs": "<% /*\ninput properties\n----------------\ncpswtng_archiva_ip string\ninputPrefix        string\noutputPrefix       string\nfedInfos           object\ndockerInfoMap      object\n\nused in\n-------\nRunFederation.js\n\n*/ -%>\n--- \nservices: \n  fedManager:\n    build: .\n    tty: true\n    image: \"cpswt/c2wtcore_v002:170626\"\n    command: \"sh start.sh FedManager\"\n    sysctls:\n      - net.ipv6.conf.all.disable_ipv6=1\n    extra_hosts:\n      - \"cpswtng_archiva:<%- cpswtng_archiva_ip %>\"\n    volumes:\n      - <%- inputPrefix %>/FedManager:/root/Projects/c2wt/input\n      - <%- outputPrefix %>/FedManager:/root/Projects/c2wt/logs\n<%\nfedInfos.map(function(fedInfo) {\n-%>\n  <%- fedInfo.type %>_<%- fedInfo.name %>:\n    build: .\n    image: \"<%- dockerInfoMap[fedInfo.type].name %>:<%- dockerInfoMap[fedInfo.type].tag %>\"\n    command: \"sh start.sh <%- fedInfo.name %>,<%- fedInfo.type %>\" \n    sysctls:\n      - net.ipv6.conf.all.disable_ipv6=1\n    extra_hosts:\n      - \"cpswtng_archiva:<%- cpswtng_archiva_ip %>\"\n    links:\n      - fedManager  \n    volumes:\n      - <%- inputPrefix %>/<%- fedInfo.name %>:/root/Projects/c2wt/input\n      - <%- outputPrefix %>/<%- fedInfo.name %>:/root/Projects/c2wt/logs\n<%\n})\n-%>\nversion: \"2.1\"\n",
    "startScript.ejs": "<% /*\ninput properties\n----------------\nnone\n\nused in\n-------\nRunFederation.js\n\n*/ -%>\n#!/bin/bash\n\n\nfedmgrIP=\"http://fedManager\"\n# fedmgrIP=$2\nfedmgrIPport=\"8083\"\nfedmgr=\"/fedmgr\"\n\n\nurl=${fedmgrIP}\":\"${fedmgrIPport}${fedmgr}\n\n# start fedmgr\nstart_fedmgr(){\n   mvn exec:java -U -X -P FederationManagerExecJava 2>&1 | tee -a /root/Projects/c2wt/logs/log.txt\n}\n\n# check if fedmgrRest is up\n\nwaitforfedmgrRESTup(){\n    query=\"curl -sL -w \"%{http_code}\\\\n\" \"${url}\" -o /dev/null\"\n    #  echo $query\n    result=`$query`\n    echo $result\n    while [ $result -ne 200 ] ; do\n        echo \"Sleep\"\n        sleep 1\n        result=`$query`\n    done\n    echo \"fedmgr started\"\n    \n}\n# issue start\ninitializefedmgr(){\n  echo \"==========================\\n\"\n  echo \"Sending START POST REQUEST\"\n  curl -i -X POST ${url} --data '{\"action\": \"START\"}' -H \"Content-Type: application/json\"\n  sleep 2\n  echo \"FedManager Initialized!!\\n\"\n  echo \"=========================\\n\"\n}\n\n\n\necho $url\n\nif [ $1 = \"FedManager\" ]; then\n   echo \"Starting --> \" $1\n   #xvfb-run -a mvn exec:exec -P Fedmanager\n   #xvfb-run -a mvn exec:exec -P FedManager &> /root/Projects/c2wt/logs/log.txt\n   #xvfb-run -a mvn package exec:exec -P FedManager 2>&1 | tee -a /root/Projects/c2wt/logs/log.txt\n   #mvn exec:java -U -X -P FederationManagerExecJava 2>&1 | tee -a /root/Projects/c2wt/logs/log.txt\n   start_fedmgr\nelse\n  echo \"Starting -->\" $1\n  #mvn exec:exec -P $1 &> /root/Projects/c2wt/logs/log.txt\n  #mvn package exec:exec -P $1  2>&1 | tee -a /root/Projects/c2wt/logs/log.txt\n  waitforfedmgrRESTup\n  initializefedmgr\n  if echo $1 | grep \"ExecJava\"\n  then\n      mvn exec:java -P $1  2>&1 | tee -a /root/Projects/c2wt/logs/log.txt\n  else\n      mvn package exec:exec -P $1  2>&1 | tee -a /root/Projects/c2wt/logs/log.txt\n  fi\nfi\n"
}});